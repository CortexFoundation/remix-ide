import { BaseApi } from '../base';
import { ModuleProfile, Api, API } from '../../types';
import { HighlightPosition } from './type';
export interface IEditorApi extends Api {
    events: {};
    methods: {
        highlight(position: HighlightPosition, filePath: string, hexColor: string): void;
        discardHighlight(): void;
    };
}
export declare const editorProfile: ModuleProfile<IEditorApi>;
export declare abstract class EditorApi<T extends Api> extends BaseApi<T & IEditorApi> implements API<IEditorApi> {
    constructor(profile: ModuleProfile);
    /** Remove the current highlight if any, and add a new one */
    abstract highlight(position: HighlightPosition, filePath: string, hexColor: string): void;
    /** Remove the current hightlight if any */
    abstract discardHighlight(): void;
}
